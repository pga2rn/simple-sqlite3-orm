name: test CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    # only trigger unit test CI when src or tests changed
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/test.yaml"
  # allow the test CI to be manually triggerred
  workflow_dispatch:

permissions:
  contents: read
  packages: read

jobs:
  pytest_with_coverage_with_supported_python_version:
    strategy:
      fail-fast: true
      matrix:
        python_version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "3.14"
          - "3.14t"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@v5

      # also see https://docs.astral.sh/uv/guides/integration/github/#multiple-python-versions
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          python-version: ${{ matrix.python_version }}
          enable-cache: true

      - name: Execute pytest via coverage by uv
        run: |
          uv run coverage run -m pytest --junit-xml=test_result/junit.xml
          uv run coverage xml -o test_result/coverage.xml

      - name: Upload test result for Python3.13
        if: ${{ matrix.python_version == '3.12' }}
        uses: actions/upload-artifact@v4
        with:
          name: test-result
          path: test_result/*

  pytest_on_supported_os_version:
    strategy:
      fail-fast: true
      matrix:
        ubuntu_base:
          - ubuntu-18.04
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04
    runs-on: ubuntu-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@v5

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run test under test base container
        working-directory: ./tests/container
        run: |
          docker compose -f ./docker-compose.yml run --rm tester-${{ matrix.ubuntu_base }}

  code_scan_and_test_result_upload:
    needs: pytest_with_coverage_with_supported_python_version
    # this is for coverage result comment
    permissions:
      contents: write
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@v5
        with:
          # sonarcloud needs main branch's ref
          fetch-depth: 0

      - name: Download test results
        uses: actions/download-artifact@v5
        with:
          name: test-result
          path: test_result

      - name: SonarCloud code scanning
        uses: SonarSource/sonarqube-scan-action@v6
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./test_result/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        uses: codecov/test-results-action@v1
        with:
          files: ./test_result/junit.xml
          token: ${{ secrets.CODECOV_TOKEN }}
